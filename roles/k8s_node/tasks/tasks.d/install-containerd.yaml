- name: Set Up containerd
  block:
  - name: setting up pre-requisites for containerd
    blockinfile:
      path: "/etc/modules-load.d/containerd.conf"
      create: true
      block: |
        overlay
        br_netfilter
  - name: loading required modules
    loop: ["overlay","br_netfilter"]
    community.general.modprobe:
      name: "{{item}}"
  - name: set kernel params for containerd
    loop:
    - name: net.bridge.bridge-nf-call-iptables
      value: '1'
    - name: net.ipv4.ip_forward
      value: '1'
    - name: net.bridge.bridge-nf-call-ip6tables
      value: '1'
    ansible.posix.sysctl:
      name: "{{item.name}}"
      value: "{{item.value}}"
      state: present
      sysctl_file: "/etc/sysctl.d/99-kubernetes-cri.conf"
  
  - name: apply kernel changes
    become: true
    command: sysctl --system

- name: instal contanerd (debian)
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Red Hat Enterprise Linux'
  block:
    - name: fail
      fail:
        msg: not implemented for debain based OSes
- name: install containerd (centos)
  when: ansible_distribution == 'CentOS'
  block:
  - name: add repo file
    get_url:
      url: "https://download.docker.com/linux/centos/docker-ce.repo"
      dest: "/etc/yum.repos.d/containerd.repo"
      mode: 0644
      owner: root
      group: root
    
  - name: install containerd (redhat) 
    loop: ["containerd.io"]
    package:
      name: "{{item}}"
      update_cache: yes
      state: latest
- name: Check that the containerd is configured
  stat:
    path: /etc/file.txt
  register: stat_result

- name: config containerd
  become: true
  shell: |
    mkdir -p /etc/containerd
    containerd config default | sudo tee /etc/containerd/config.toml
  args:
    warn: no
  when: not stat_result.stat.exists

- name: restart contanerd
  systemd:
    name: containerd
    state: restarted
    daemon_reload: yes
  when: not stat_result.stat.exists
      